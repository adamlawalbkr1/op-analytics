name: Run OP Stack Metadata

on:
  schedule:
    - cron: '1 5 * * 0'
  workflow_dispatch:
  pull_request:
    types: [closed]
    paths:
      - 'op_chains_tracking/inputs/**'
      - 'op_chains_tracking/clickhouse_builds/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      
      - name: Fetch latest changes
        run: git pull --rebase origin main
      
      - name: Display System Info
        run: |
          free -h
          df -h

      - name: Set up Python and Node.js
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
        env:
          node-version: '16'

      - name: Install pipenv
        run: |
          python -m pip install pipenv

      - name: Install Dependencies
        run: |
          pipenv install --dev

      - name: Generate py files
        working-directory: op_chains_tracking
        run: |
          pipenv run jupyter nbconvert --to python inputs/clean_chain_metadata_and_upload.ipynb
          pipenv run jupyter nbconvert --to python clickhouse_builds/create_matviews.ipynb
          pipenv run jupyter nbconvert --to python clickhouse_builds/create_superchain_data_view.ipynb
        # pipenv run jupyter nbconvert --to python clickhouse_builds/create_projections.ipynb
          
      - name: Generate Chain Metadata
        working-directory: op_chains_tracking/inputs
        run: |
          pipenv run python clean_chain_metadata_and_upload.py
        env:
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
          IS_RUNNING_LOCAL: ${{ secrets.IS_RUNNING_LOCAL }}
          BQ_APPLICATION_CREDENTIALS: ${{ secrets.BQ_APPLICATION_CREDENTIALS }}
          BQ_PROJECT_ID: ${{ secrets.BQ_PROJECT_ID }}
          OP_CLICKHOUSE_HOST: ${{ secrets.OP_CLICKHOUSE_HOST }}
          OP_CLICKHOUSE_USER: ${{ secrets.OP_CLICKHOUSE_USER }}
          OP_CLICKHOUSE_PW: ${{ secrets.OP_CLICKHOUSE_PW }}
          OP_CLICKHOUSE_PORT: ${{ secrets.OP_CLICKHOUSE_PORT }}

      - name: Commit and Push Chain Metadata changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          git diff --quiet && git diff --staged --quiet || (git commit -m "GH Action Update - Chain Metadata" && git push --force-with-lease)

      # - name: Create Projections
      #   working-directory: op_chains_tracking/clickhouse_builds
      #   run: |
      #     pipenv run python create_projections.py
      #   env:
      #     OP_CLICKHOUSE_HOST: ${{ secrets.OP_CLICKHOUSE_HOST }}
      #     OP_CLICKHOUSE_USER: ${{ secrets.OP_CLICKHOUSE_USER }}
      #     OP_CLICKHOUSE_PW: ${{ secrets.OP_CLICKHOUSE_PW }}
      #     OP_CLICKHOUSE_PORT: ${{ secrets.OP_CLICKHOUSE_PORT }}

      - name: Create Matviews
        working-directory: op_chains_tracking/clickhouse_builds
        run: |
          pipenv run python create_matviews.py
        env:
          OP_CLICKHOUSE_HOST: ${{ secrets.OP_CLICKHOUSE_HOST }}
          OP_CLICKHOUSE_USER: ${{ secrets.OP_CLICKHOUSE_USER }}
          OP_CLICKHOUSE_PW: ${{ secrets.OP_CLICKHOUSE_PW }}
          OP_CLICKHOUSE_PORT: ${{ secrets.OP_CLICKHOUSE_PORT }}

      - name: Create Views
        working-directory: op_chains_tracking/clickhouse_builds
        run: |
          pipenv run python create_superchain_data_view.py
        env:
          OP_CLICKHOUSE_HOST: ${{ secrets.OP_CLICKHOUSE_HOST }}
          OP_CLICKHOUSE_USER: ${{ secrets.OP_CLICKHOUSE_USER }}
          OP_CLICKHOUSE_PW: ${{ secrets.OP_CLICKHOUSE_PW }}
          OP_CLICKHOUSE_PORT: ${{ secrets.OP_CLICKHOUSE_PORT }}

      - name: Commit and Push Matviews and Views changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          git diff --quiet && git diff --staged --quiet || (git commit -m "GH Action Update - Matviews and Views" && git push --force-with-lease)